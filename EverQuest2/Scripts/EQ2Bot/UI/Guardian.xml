<?xml version="1.0" encoding="UTF-8" ?>
<ISUI>
	<Commandcheckbox Name='OffensiveMode'>
		<X>10</X>
		<Y>10</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Enable Offensive Mode</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[OffensiveMode]:Set[TRUE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Cast Offensive Spells",TRUE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
			else
			{
				Script[EQ2Bot].Variable[OffensiveMode]:Set[FALSE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Cast Offensive Spells",FALSE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
		</OnLeftClick>
		<Data>${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Cast Offensive Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='DefensiveMode'>
		<X>10</X>
		<Y>30</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Enable Defensive Mode</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[DefensiveMode]:Set[TRUE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Cast Defensive Spells",TRUE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
			else
			{
				Script[EQ2Bot].Variable[DefensiveMode]:Set[FALSE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Cast Defensive Spells",FALSE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
		</OnLeftClick>
		<Data>${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Cast Defensive Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='MezMode'>
		<X>10</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Enable Mez Friendly Mode</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[MezMode]:Set[TRUE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Use MezMode",TRUE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
			else
			{
				Script[EQ2Bot].Variable[MezMode]:Set[FALSE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Use MezMode",FALSE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
		</OnLeftClick>
		<Data>${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Use MezMode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='PBAoEMode'>
		<X>10</X>
		<Y>70</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Enable PBAoE Mode</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[PBAoEMode]:Set[TRUE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Cast PBAoE Spells",TRUE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
			else
			{
				Script[EQ2Bot].Variable[PBAoEMode]:Set[FALSE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Cast PBAoE Spells",FALSE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
		</OnLeftClick>
		<Data>${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Cast PBAoE Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Full Auto Mode'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>90</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Full Auto Mode:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[FullAutoMode]:Set[TRUE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Full Auto Mode",TRUE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
			else
			{
				Script[EQ2Bot].Variable[FullAutoMode]:Set[FALSE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Full Auto Mode",FALSE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
		</OnLeftClick>
		<Data>${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Full Auto Mode]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='Taunt Mode'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>110</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Taunt Mode:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[TauntMode]:Set[TRUE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Cast Taunt Spells",TRUE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
			else
			{

				Script[EQ2Bot].Variable[TauntMode]:Set[FALSE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Cast Taunt Spells",FALSE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
		</OnLeftClick>
		<Data>${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Cast Taunt Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='cbDragoonsCyclone'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>130</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff Dragoon's Cyclone:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[DragoonsCycloneMode]:Set[TRUE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Buff Dragoons Cyclone",TRUE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
			else
			{

				Script[EQ2Bot].Variable[DragoonsCycloneMode]:Set[FALSE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Buff Dragoons Cyclone",FALSE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
		</OnLeftClick>
		<Data>${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Buff Dragoons Cyclone]}</Data>
	</Commandcheckbox>
	<Text Name='lblMainWeapon'>
		<X>10</X>
		<Y>150</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Main Hand:</Text>
		<AutoTooltip>Main Hand weapon to equip when not using an AA weapon</AutoTooltip>
	</Text>
	<combobox name='cbMainWeapon'>
		<x>100</x>
		<y>150</y>
		<width>30%</width>
		<height>20</height>
		<OnLeftClick>
			variable index:item Items
			variable iterator ItemIterator
			variable int Counter = 1
			This:ClearItems
			Me:QueryInventory[Items, Location =- "Inventory" &amp;&amp; Type =- "Weapon"]
			Items:GetIterator[ItemIterator]
			if ${ItemIterator:First(exists)}
			{
				do
				{
					This:AddItem[${ItemIterator.Value.Name}]
				}
				while ${ItemIterator:Next(exists)}
			}
			do
			{
				if ${Me.Equipment[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem[${Me.Equipment[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem["${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Main]}"]
			This.ItemByText[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Main]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[WeaponMain]:Set[${This.SelectedItem.Text}]
			LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting[Main,"${This.SelectedItem.Text}"]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
		</OnSelect>
	</combobox>
	<Text Name='lblOffHand'>
		<X>10</X>
		<Y>170</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Off Hand:</Text>
		<AutoTooltip>Off hand item to equip when not using an AA off hand item</AutoTooltip>
	</Text>
	<combobox name='cbOffHand'>
		<x>100</x>
		<y>170</y>
		<width>30%</width>
		<height>20</height>
		<AutoTooltip>Off hand item to equip when not using an AA off hand item</AutoTooltip>
		<OnLeftClick>
			variable index:item Items
			variable iterator ItemIterator
			variable int Counter = 1
			This:ClearItems
			Me:QueryInventory[Items, Location =- "Inventory" &amp;&amp; (Type =- "Weapon" || Type =- "Shield")]
			Items:GetIterator[ItemIterator]
			if ${ItemIterator:First(exists)}
			{
				do
				{
					This:AddItem[${ItemIterator.Value.Name}]
				}
				while ${ItemIterator:Next(exists)}
			}
			do
			{
				if ${Me.Equipment[${Counter}].Type.Equal[Weapon]} || ${Me.Equipment[${Counter}].Type.Equal[Shield]}
				{
					This:AddItem[${Me.Equipment[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem["${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[OffHand]}"]
			This.ItemByText[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[OffHand]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[OffHand]:Set[${This.SelectedItem.Text}]
			LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting[OffHand,"${This.SelectedItem.Text}"]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
		</OnSelect>
	</combobox>
	<Text Name='lblTowerShield'>
		<X>10</X>
		<Y>250</Y>
		<Width>40%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Tower Shield for Tower of Stone:</Text>
		<AutoTooltip>TowerShield to use during required spells</AutoTooltip>
	</Text>
	<combobox name='cbTowerShield'>
		<x>175</x>
		<y>249</y>
		<width>30%</width>
		<height>20</height>
		<AutoTooltip>TowerShield to use during TowerShield required spells</AutoTooltip>
		<OnLeftClick>
			variable index:item Items
			variable iterator ItemIterator
			variable int Counter = 1
			This:ClearItems
			Me:QueryInventory[Items, Location =- "Inventory" &amp;&amp; Type =- "Shield"]
			Items:GetIterator[ItemIterator]
			if ${ItemIterator:First(exists)}
			{
				do
				{
					This:AddItem[${ItemIterator.Value.Name}]
				}
				while ${ItemIterator:Next(exists)}
			}
			do
			{
				if ${Me.Equipment[${Counter}].Type.Equal[Shield]}
				{
					This:AddItem[${Me.Equipment[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem["${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[TowerShield]}"]
			This.ItemByText[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[TowerShield]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[TowerShield]:Set[${This.SelectedItem.Text}]
			LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting[TowerShield,"${This.SelectedItem.Text}"]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
		</OnSelect>
	</combobox>
	<Text Name='lblBuffAvoidanceGroupMember'>
			<X>375</X>
			<Y>10</Y>
			<Width>25%</Width>
			<Height>20</Height>
			<Alignment>Left</Alignment>
			<Text>Buff Never Surrender:</Text>
			<AutoTooltip></AutoTooltip>
		</Text>
		<combobox name='cbBuffAvoidanceGroupMember'>
			<x>375</x>
			<y>30</y>
			<Width>100</width>
			<Height>20</height>
			<AutoTooltip>The Group or Raid Member to Avoidance Buff</AutoTooltip>
			<Items></items>
			<OnLoad>
				This:AddItem[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[BuffAvoidanceGroupMember]}]
				This.ItemByText[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[BuffAvoidanceGroupMember]}]:Select
			</OnLoad>
			<OnSelect>
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting[BuffAvoidanceGroupMember,${This.SelectedItem.Text}]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings</OnSelect>
			<OnLeftClick>
			  Script[EQ2Bot].VariableScope.EQ2Bot:RefreshList[${This.FullName},BuffAvoidanceGroupMember,0,1,1]
			</OnLeftClick>
		</combobox>
	<Text Name='lblBuffSentinelGroupMember'>
			<X>375</X>
			<Y>60</Y>
			<Width>20%</Width>
			<Height>20</Height>
			<Alignment>Left</Alignment>
			<Text>Buff Sentinel:</Text>
			<AutoTooltip></AutoTooltip>
		</Text>
		<combobox name='cbBuffSentinelGroupMember'>
			<x>375</x>
			<y>80</y>
			<Width>100</width>
			<Height>20</height>
			<AutoTooltip>The Group Member to Sentinel Intercept</AutoTooltip>
			<Items></items>
			<OnLoad>
				This:AddItem[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[BuffSentinelGroupMember]}]
				This.ItemByText[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[BuffSentinelGroupMember]}]:Select
			</OnLoad>
			<OnSelect>
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting[BuffSentinelGroupMember,${This.SelectedItem.Text}]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings</OnSelect>
			<OnLeftClick>
			  Script[EQ2Bot].VariableScope.EQ2Bot:RefreshList[${This.FullName},BuffSentinelGroupMember,0,1,0]
			</OnLeftClick>
	</combobox>
	<Text Name='lblBuffDeagroGroupMember'>
			<X>375</X>
			<Y>100</Y>
			<Width>20%</Width>
			<Height>20</Height>
			<Alignment>Left</Alignment>
			<Text>Buff Moderate:</Text>
			<AutoTooltip></AutoTooltip>
		</Text>
		<combobox name='cbBuffDeagroGroupMember'>
			<x>375</x>
			<y>120</y>
			<Width>100</width>
			<Height>20</height>
			<AutoTooltip>The Group Member to Reduce Agro For</AutoTooltip>
			<Items></items>
			<OnLoad>
				This:AddItem[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[BuffDeagroGroupMember]}]
				This.ItemByText[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[BuffDeagroGroupMember]}]:Select
			</OnLoad>
			<OnSelect>
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting[BuffDeagroGroupMember,${This.SelectedItem.Text}]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings</OnSelect>
			<OnLeftClick>
			  Script[EQ2Bot].VariableScope.EQ2Bot:RefreshList[${This.FullName},BuffDeagroGroupMember,0,1,0]
			</OnLeftClick>
	</combobox>
	<Commandcheckbox Name='StartHO'>
		<Visible>1</Visible>
		<X>375</X>
		<Y>140</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Innitiate HO's</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[StartHO]:Set[TRUE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Start HOs",TRUE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
			else
			{
				Script[EQ2Bot].Variable[StartHO]:Set[FALSE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Start HOs",FALSE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
		</OnLeftClick>
		<Data>${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Start HOs]}</Data>
	</Commandcheckbox>
</ISUI>