<?xml version="1.0" encoding="UTF-8"?>
<ISUI>
	<!-- Main LGUI -->
	<Window Name='Craft Selection'>
		<X>100</X>
		<Y>100</Y>
		<Width>420</Width>
		<Height>420</Height>
		<StorePosition>1</StorePosition>
		<Title>Automatic Crafting Bot</Title>
		<TitleBar Template='window.Titlebar'>
			<Children>
				<Text Name='Title' Template='window.Titlebar.Title' />
				<Button Name='Minimize' Template='window.Titlebar.Minimize' />
				<Button Name='CraftLite'>
					<X>50%</X>
					<Y>0</Y>
					<Width>70</Width>
					<Height>14</Height>
					<Font Template='button.Font'>
						<Size>13</Size>
						<Bold />
					</Font>
					<Text>Craft Lite</Text>
					<OnLeftClick>
						if ${Script[EQ2Craft].Variable[CraftLite]}
						{
						UIElement[Main Frame@Craft Selection]:Show
						Script[EQ2Craft].Variable[Craft]:SetMode[normal]
						UIElement[Craft Selection]:Unminimize
						This:SetText[Craft Lite]
						}
						else
						{
						UIElement[Main Frame@Craft Selection]:Hide
						Script[EQ2Craft].Variable[Craft]:SetMode[lite]
						UIElement[Craft Selection]:Minimize
						This:SetText[Craft Full]
						}
					</OnLeftClick>
				</Button>
				<commandbutton name='Custom Close Button' Template='window.Titlebar.Close'>
					<Command>Script[EQ2Craft]:End</Command>
				</commandbutton>
			</Children>
		</TitleBar>
		<OnLoad>
			declare thisbuttondisabled bool global 0
			declare thisbuttonrefresh bool global 0
			declare thisbuttonpaused bool global 0
			declare thisbuttonlist bool global 0
			declare thisbuttonsubmit bool global 0
			declare thisbuttonadd bool global 0
			declare thisharvestframe bool global 0
		</OnLoad>
		<OnUnload>
			deletevar thisbuttondisabled
			deletevar thisbuttonrefresh
			deletevar thisbuttonpaused
			deletevar thisbuttonlist
			deletevar thisbuttonsubmit
			deletevar thisbuttonadd
			deletevar thisharvestframe
		</OnUnload>
		<Children>
			<Frame Name='Main Frame'>
				<X>10</X>
				<Y>28</Y>
				<Height>r-13</Height>
				<Width>r20</Width>
				<Visible>1</Visible>
				<Children>
					<Tabcontrol Name='Craft Main'>
						<X>0</X>
						<Y>0</Y>
						<Font>
							<Name>Times New Roman</Name>
							<Size>15</Size>
						</Font>
						<TabHeight>27</TabHeight>
						<TabBorder>3</TabBorder>
						<Height>r50</Height>
						<Width>100%</Width>
						<OnLeftClick>
							if ${UIElement[Craft Selection].FindUsableChild[Craft Main,tabcontrol].SelectedTab.Name.Equal[Queue]}
							{
							UIElement[Craft Selection].FindUsableChild[Harvest Frame,frame]:Hide:SetZOrder[notalwaysontop]:SetZOrder[movedown]
							UIElement[Craft Selection].FindUsableChild[Crafting List Frame,frame]:Show:SetZOrder[notalwaysontop]:SetZOrder[movetop]
							}
							elseif ${UIElement[Craft Selection].FindUsableChild[Craft Main,tabcontrol].SelectedTab.Name.Equal[Options]}
							{
							UIElement[Craft Selection].FindUsableChild[Harvest Frame,frame]:Hide:SetZOrder[notalwaysontop]:SetZOrder[movedown]
							UIElement[Craft Selection].FindUsableChild[Crafting List Frame,frame]:Hide:SetZOrder[notalwaysontop]:SetZOrder[movedown]
							}
							elseif ${UIElement[Craft Selection].FindUsableChild[Craft Main,tabcontrol].SelectedTab.Name.Equal[Writs]}
							{
							UIElement[Craft Selection].FindUsableChild[Harvest Frame,frame]:Hide:SetZOrder[notalwaysontop]:SetZOrder[movedown]
							UIElement[Craft Selection].FindUsableChild[Crafting List Frame,frame]:Hide:SetZOrder[notalwaysontop]:SetZOrder[movedown]
							}
							elseif ${UIElement[Craft Selection].FindUsableChild[Craft Main,tabcontrol].SelectedTab.Name.Equal[About]}
							{
							UIElement[Craft Selection].FindUsableChild[Harvest Frame,frame]:Hide:SetZOrder[notalwaysontop]:SetZOrder[movedown]
							UIElement[Craft Selection].FindUsableChild[Crafting List Frame,frame]:Hide:SetZOrder[notalwaysontop]:SetZOrder[movedown]
							}
							else
							{
							UIElement[Craft Selection].FindUsableChild[Crafting List Frame,frame]:Hide:SetZOrder[notalwaysontop]:SetZOrder[movedown]
							if ${thisharvestframe}
							{
							UIElement[Craft Selection].FindUsableChild[Harvest Frame,frame]:Show:SetZOrder[alwaysontop]:SetZOrder[movetop]
							}
							}
						</OnLeftClick>
						<Tabs>
							<Tab Name='Recipes'>
								<Combobox Name='Recipe List'>
									<X>5</X>
									<Y>6</Y>
									<Width>97.8%</Width>
									<Height>23</Height>
									<FullHeight>250%</FullHeight>
									<ButtonWidth>20</ButtonWidth>
									<!--	<Font Template='Tahoma'>
										<Color>FFEBDEAA</Color>
									</Font> -->
								</Combobox>
								<Text name='Sort Order'>
									<X>18</X>
									<Y>30</Y>
									<Width>150</Width>
									<Height>20</Height>
									<Font Template='Tahoma'>
										<Bold />
										<Size>18</Size>
										<Color>FFEBDEAA</Color>
									</Font>
									<Text>Sort Order:</Text>
								</Text>
								<Checkbox Name='Sort Name'>
									<Font Template='Tahoma'>
										<Bold />
										<Size>18</Size>
										<Color>FFEBDEAA</Color>
									</Font>
									<X>110</X>
									<Y>30</Y>
									<Width>50</Width>
									<Height>20</Height>
									<Text>by Name</Text>
									<OnLoad>
										if ${Script[EQ2Craft].Variable[SortLevel]}
										{
										UIElement[Sort Name@Recipes@Craft Main@Main Frame@Craft Selection]:SetChecked
										}
									</OnLoad>
									<OnLeftClick>
										Script[EQ2Craft]:QueueCommand[Craft:SortbyName]
									</OnLeftClick>
								</Checkbox>
								<Checkbox Name='Sort Level'>
									<Font Template='Tahoma'>
										<Bold />
										<Size>18</Size>
										<Color>FFEBDEAA</Color>
									</Font>
									<X>200</X>
									<Y>30</Y>
									<Width>100</Width>
									<Height>20</Height>
									<Text>by Level</Text>
									<OnLoad>
										if !${Script[EQ2Craft].Variable[SortLevel]}
										{
										UIElement[Sort Level@Recipes@Craft Main@Main Frame@Craft Selection]:SetChecked
										}
									</OnLoad>
									<OnLeftClick>
										Script[EQ2Craft]:QueueCommand[Craft:SortbyLevel]
									</OnLeftClick>
								</Checkbox>
								<Textentry Name='Level Min'>
									<X>300</X>
									<Y>33</Y>
									<Width>30</Width>
									<Height>15</Height>
									<MaxLength>3</MaxLength>
									<Color>FFDDBB00</Color>
								</Textentry>
								<Text Name='Dash Label'>
									<Font Template='Tahoma'>
										<Color>FFEBDEAA</Color>
									</Font>
									<X>340</X>
									<Y>31</Y>
									<Width>10</Width>
									<Height>20</Height>
									<Text>---</Text>
								</Text>
								<Textentry Name='Level Max'>
									<X>360</X>
									<Y>33</Y>
									<Width>30</Width>
									<Height>15</Height>
									<MaxLength>3</MaxLength>
									<Color>FFDDBB00</Color>
								</Textentry>
								<Textentry Name='Quantity Value'>
									<X>90</X>
									<Y>57</Y>
									<Width>50</Width>
									<Height>20</Height>
									<MaxLength>4</MaxLength>
									<Color>FFDDBB00</Color>
								</Textentry>
								<Text Name='Quantity Label'>
									<Font Template='Tahoma'>
										<Bold />
										<Size>18</Size>
										<Color>FFEBDEAA</Color>
									</Font>
									<X>18</X>
									<Y>58</Y>
									<Width>100</Width>
									<Height>20</Height>
									<Text>Quantity:</Text>
								</Text>
								<Commandbutton name='Add Recipe'>
									<X>150</X>
									<Y>57</Y>
									<Width>70</Width>
									<Height>20</Height>
									<Text>Add Recipe</Text>
									<OnLeftClick>
										if !${thisbuttondisabled}
										{
										thisbuttondisabled:Set[1]
										UIElement[Craft Selection].FindUsableChild[Add Recipe,commandbutton]:Hide
										Script[EQ2Craft]:QueueCommand[Craft:AddRecipe]
										}
									</OnLeftClick>
								</Commandbutton>
								<Button Name='Search List'>
									<X>230</X>
									<Y>57</Y>
									<Width>70</Width>
									<Height>20</Height>
									<Text>Search List</Text>
									<OnLeftClick>
										ICraft.Search:ToggleVisible
									</OnLeftClick>
								</Button>
								<Commandbutton name='Refresh List'>
									<X>310</X>
									<Y>57</Y>
									<Width>70</Width>
									<Height>20</Height>
									<Text>Refresh List</Text>
									<OnLeftClick>
										if !${thisbuttonrefresh}
										{
											thisbuttonrefresh:Set[1]
											Script[EQ2Craft]:QueueCommand[Craft:RefreshList]
										}
									</OnLeftClick>
								</Commandbutton>
								<Text Name='Filter Label'>
									<Font Template='Tahoma'>
										<Bold />
										<Size>18</Size>
										<Color>FFEBDEAA</Color>
									</Font>
									<X>5%</X>
									<Y>90</Y>
									<Width>95%</Width>
									<Height>20</Height>
									<Text>Filters:</Text>
								</Text>
								<Checkbox Name='Standard Filter'>
									<Font Template='Tahoma'>
										<Bold />
										<Size>18</Size>
										<Color>FFEBDEAA</Color>
									</Font>
									<X>20%</X>
									<Y>90</Y>
									<Width>20%</Width>
									<Height>20</Height>
									<Text>Standard</Text>
									<OnLoad>
										if ${Script[EQ2Craft].Variable[StandardFilter]}
										{
										UIElement[Standard Filter@Recipes@Craft Main@Main Frame@Craft Selection]:SetChecked
										}
									</OnLoad>
									<OnLeftClick>
										if ${UIElement[Standard Filter@Recipes@Craft Main@Main Frame@Craft Selection].Checked}
										{
										Script[EQ2Craft].Variable[StandardFilter]:Set[TRUE]
										}
										else
										{
										Script[EQ2Craft].Variable[StandardFilter]:Set[FALSE]
										}

										Script[EQ2Craft]:ExecuteAtom[UpdateSettings]

										if !${thisbuttonrefresh}
										{
										thisbuttonrefresh:Set[1]
										Script[EQ2Craft]:QueueCommand[Craft:RefreshList]
										}
									</OnLeftClick>
								</Checkbox>
								<Checkbox Name='Imbued Filter'>
									<Font Template='Tahoma'>
										<Bold />
										<Size>18</Size>
										<Color>FFEBDEAA</Color>
									</Font>
									<X>42%</X>
									<Y>90</Y>
									<Width>20%</Width>
									<Height>20</Height>
									<Text>Imbued</Text>
									<OnLoad>
										if ${Script[EQ2Craft].Variable[ImbuedFilter]}
										{
										UIElement[Imbued Filter@Recipes@Craft Main@Main Frame@Craft Selection]:SetChecked
										}
									</OnLoad>
									<OnLeftClick>
										if ${UIElement[Imbued Filter@Recipes@Craft Main@Main Frame@Craft Selection].Checked}
										{
										Script[EQ2Craft].Variable[ImbuedFilter]:Set[TRUE]
										}
										else
										{
										Script[EQ2Craft].Variable[ImbuedFilter]:Set[FALSE]
										}

										Script[EQ2Craft]:ExecuteAtom[UpdateSettings]

										if !${thisbuttonrefresh}
										{
										thisbuttonrefresh:Set[1]
										Script[EQ2Craft]:QueueCommand[Craft:RefreshList]
										}
									</OnLeftClick>
								</Checkbox>
								<Checkbox Name='Rare Filter'>
									<Font Template='Tahoma'>
										<Bold />
										<Size>18</Size>
										<Color>FFEBDEAA</Color>
									</Font>
									<X>60%</X>
									<Y>90</Y>
									<Width>20%</Width>
									<Height>20</Height>
									<Text>Rare</Text>
									<OnLoad>
										if ${Script[EQ2Craft].Variable[RareFilter]}
										{
										UIElement[Rare Filter@Recipes@Craft Main@Main Frame@Craft Selection]:SetChecked
										}
									</OnLoad>
									<OnLeftClick>
										if ${UIElement[Rare Filter@Recipes@Craft Main@Main Frame@Craft Selection].Checked}
										{
										Script[EQ2Craft].Variable[RareFilter]:Set[TRUE]
										}
										else
										{
										Script[EQ2Craft].Variable[RareFilter]:Set[FALSE]
										}

										Script[EQ2Craft]:ExecuteAtom[UpdateSettings]

										if !${thisbuttonrefresh}
										{
										thisbuttonrefresh:Set[1]
										Script[EQ2Craft]:QueueCommand[Craft:RefreshList]
										}
									</OnLeftClick>
								</Checkbox>
								<Checkbox Name='Secondary Tradeskill'>
									<Visible>0</Visible>
									<Font Template='Tahoma'>
										<Bold />
										<Size>18</Size>
										<Color>FFEBDEAA</Color>
									</Font>
									<X>75%</X>
									<Y>90</Y>
									<Width>20%</Width>
									<Height>20</Height>
									<OnLoad>
										if ${Script[EQ2Craft].Variable[SecondaryTS]}
										{
										UIElement[Secondary Tradeskill@Recipes@Craft Main@Main Frame@Craft Selection]:SetChecked
										}
									</OnLoad>
									<OnLeftClick>
										if ${UIElement[Secondary Tradeskill@Recipes@Craft Main@Main Frame@Craft Selection].Checked}
										{
										Script[EQ2Craft].Variable[SecondaryTS]:Set[TRUE]
										}
										else
										{
										Script[EQ2Craft].Variable[SecondaryTS]:Set[FALSE]
										}

										Script[EQ2Craft]:ExecuteAtom[UpdateSettings]

										if !${thisbuttonrefresh}
										{
										thisbuttonrefresh:Set[1]
										Script[EQ2Craft]:QueueCommand[Craft:RefreshList]
										}
									</OnLeftClick>
								</Checkbox>
								<Text Name='Quality Level'>
									<Font Template='Tahoma'>
										<Bold />
										<Size>18</Size>
										<Color>FFEBDEAA</Color>
									</Font>
									<X>5%</X>
									<Y>115</Y>
									<Width>150</Width>
									<Height>20</Height>
									<Color>FFDDBB00</Color>
									<Text>Quality Level:</Text>
								</Text>
								<Commandcheckbox Name='Quality 1'>
									<Font Template='Tahoma'>
										<Color>FFEBDEAA</Color>
									</Font>
									<X>35%</X>
									<Y>115</Y>
									<Width>50</Width>
									<Height>20</Height>
									<Text>1</Text>
									<Command>noop ${Script[EQ2Craft].Variable[Quality1]:Set[TRUE]} noop ${Script[EQ2Craft].Variable[Quality2]:Set[FALSE]} noop ${Script[EQ2Craft].Variable[Quality3]:Set[FALSE]} noop ${Script[EQ2Craft].Variable[Quality4]:Set[FALSE]}</Command>
									<CommandChecked />
									<Data>${Script[EQ2Craft].Variable[Quality1]}</Data>
								</Commandcheckbox>
								<Commandcheckbox Name='Quality 2'>
									<Font Template='Tahoma'>
										<Color>FFEBDEAA</Color>
									</Font>
									<X>50%</X>
									<Y>115</Y>
									<Width>50</Width>
									<Height>20</Height>
									<Text>2</Text>
									<Command>noop ${Script[EQ2Craft].Variable[Quality1]:Set[FALSE]} noop ${Script[EQ2Craft].Variable[Quality2]:Set[TRUE]} noop ${Script[EQ2Craft].Variable[Quality3]:Set[FALSE]} noop ${Script[EQ2Craft].Variable[Quality4]:Set[FALSE]}</Command>
									<CommandChecked />
									<Data>${Script[EQ2Craft].Variable[Quality2]}</Data>
								</Commandcheckbox>
								<Commandcheckbox Name='Quality 3'>
									<Font Template='Tahoma'>
										<Color>FFEBDEAA</Color>
									</Font>
									<X>65%</X>
									<Y>115</Y>
									<Width>50</Width>
									<Height>20</Height>
									<Text>3</Text>
									<Command>noop ${Script[EQ2Craft].Variable[Quality1]:Set[FALSE]} noop ${Script[EQ2Craft].Variable[Quality2]:Set[FALSE]} noop ${Script[EQ2Craft].Variable[Quality3]:Set[TRUE]} noop ${Script[EQ2Craft].Variable[Quality4]:Set[FALSE]}</Command>
									<CommandChecked />
									<Data>${Script[EQ2Craft].Variable[Quality3]}</Data>
								</Commandcheckbox>
								<Commandcheckbox Name='Quality 4'>
									<Font Template='Tahoma'>
										<Color>FFEBDEAA</Color>
									</Font>
									<X>80%</X>
									<Y>115</Y>
									<Width>50</Width>
									<Height>20</Height>
									<Text>4</Text>
									<Command>noop ${Script[EQ2Craft].Variable[Quality1]:Set[FALSE]} noop ${Script[EQ2Craft].Variable[Quality2]:Set[FALSE]} noop ${Script[EQ2Craft].Variable[Quality3]:Set[FALSE]} noop ${Script[EQ2Craft].Variable[Quality4]:Set[TRUE]}</Command>
									<CommandChecked />
									<Data>${Script[EQ2Craft].Variable[Quality4]}</Data>
								</Commandcheckbox>
								<Text Name='Gauge Label'>
									<Visible>0</Visible>
									<Font Template='Tahoma'>
										<Bold />
										<Size>18</Size>
										<Color>FFEBDEAA</Color>
									</Font>
									<X>30%</X>
									<Y>135</Y>
									<Width>500</Width>
									<Height>20</Height>
									<Text>Currently Processing Recipe..</Text>
								</Text>
								<VariableGauge Name='Process Recipe'>
									<Visible>0</Visible>
									<Data>${Script[EQ2Craft].Variable[gaugelevel]}</Data>
									<X>106</X>
									<Y>152</Y>
									<Border>3</Border>
									<Width>200</Width>
									<Height>15</Height>
								</VariableGauge>
								<Commandbutton Name='Start Crafting'>
									<Visible>0</Visible>
									<X>38</X>
									<Y>145</Y>
									<Width>120</Width>
									<Height>20</Height>
									<Text>Begin Crafting</Text>
									<OnLeftClick>
										Script[EQ2Craft].Variable[startrecipe]:Set[TRUE]
										UIElement[CraftLite@Titlebar@Craft Selection]:Hide
									</OnLeftClick>
								</Commandbutton>
								<Commandbutton Name='Resume Crafting'>
									<Visible>0</Visible>`
									<X>38</X>
									<Y>145</Y>
									<Width>120</Width>
									<Height>20</Height>
									<Text>Resume Crafting</Text>
									<OnLeftClick>
										Script[EQ2Craft].Variable[resumecraft]:Set[TRUE]
									</OnLeftClick>
								</Commandbutton>
								<Commandcheckbox Name='Save List'>
									<Visible>0</Visible>
									<Font Template='Tahoma'>
										<Color>FFEBDEAA</Color>
									</Font>
									<X>180</X>
									<Y>145</Y>
									<Width>100</Width>
									<Height>20</Height>
									<Text>Save Recipe List</Text>
									<Command>noop ${Script[EQ2Craft].Variable[SaveList]:Set[TRUE]} noop ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</Command>
									<CommandChecked>noop ${Script[EQ2Craft].Variable[SaveList]:Set[FALSE]} noop ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</CommandChecked>
									<Data>${Script[EQ2Craft].Variable[SaveList]}</Data>
								</Commandcheckbox>
								<Text Name='Resume Label'>
									<Visible>0</Visible>
									<Font Template='Tahoma'>
										<Bold />
										<Size>16</Size>
										<Color>FF22FF22</Color>
									</Font>
									<X>25</X>
									<Y>165</Y>
									<Width>95%</Width>
									<Height>20</Height>
									<Text>Not all HARVESTS have been bought. Click Resume Crafting.</Text>
								</Text>
								<Button Name='Crafted Title'>
									<X>10</X>
									<Y>182</Y>
									<Width>r20</Width>
									<Height>15</Height>
									<TextColor>FFEECC00</TextColor>
									<Text>RECIPE QUEUE</Text>
								</Button>
								<Listbox Name='Crafted List'>
									<X>10</X>
									<Y>197</Y>
									<Width>r20</Width>
									<Height>140</Height>
									<Font Template='Tahoma'>
									</Font>
									<SelectMultiple>1</SelectMultiple>
									<Texture />
									<Sort>Text</Sort>
								</Listbox>
							</Tab>
							<Tab Name='Queue'>
								<Combobox Name='Queue Class'>
									<X>100</X>
									<Y>10</Y>
									<Width>80</Width>
									<Height>23</Height>
									<Fullheight>185</Fullheight>
									<ButtonWidth>20</ButtonWidth>
									<OnLoad>This.ItemByText[ALL]:Select
									This.ItemByText[${Me.TSSubClass}]:Select
									</OnLoad>
									<OnSelect>
										Script[EQ2Craft].VariableScope.Craft:PopulateFavorites[${This.SelectedItem.Text}]
									</OnSelect>
									<Items>
										<Item Value='1'>ALL</Item>
										<Item Value='2'>Alchemist</Item>
										<Item Value='3'>Armorer</Item>
										<Item Value='4'>Carpenter</Item>
										<Item Value='5'>Jeweler</Item>
										<Item Value='6'>Provisioner</Item>
										<Item Value='7'>Sage</Item>
										<Item Value='8'>Tailor</Item>
										<Item Value='9'>Weaponsmith</Item>
										<Item Value='10'>Woodworker</Item>
									</Items>
								</Combobox>
								<Combobox Name='Favourites List'>
									<X>185</X>
									<Y>10</Y>
									<Width>200</Width>
									<Height>23</Height>
									<FullHeight>120</FullHeight>
									<ButtonWidth>20</ButtonWidth>
									<!--	<Font Template='Tahoma'>
										<Color>FFEBDEAA</Color>
									</Font> -->
								</Combobox>
								<Commandbutton Name='Load Recipe Queue'>
									<X>5</X>
									<Y>10</Y>
									<Width>85</Width>
									<Height>20</Height>
									<Text>Load</Text>
									<OnLeftClick>
										Script[EQ2Craft]:QueueCommand[Craft:LoadRecipeList]
									</OnLeftClick>
								</Commandbutton>
								<Text Name='Remove Title'>
									<X>100</X>
									<Y>35</Y>
									<Width>350</Width>
									<Height>20</Height>
									<Font Template='Tahoma'>
										<Color>FFEBDEAA</Color>
									</Font>
									<Text>Remove selected Recipes from the queue</Text>
								</Text>
								<Commandbutton Name='Remove Button'>
									<X>5</X>
									<Y>35</Y>
									<Width>85</Width>
									<Height>20</Height>
									<Text>Remove</Text>
									<OnLeftClick>
										Script[EQ2Craft]:QueueCommand[Craft:RemoveRecipe]
									</OnLeftClick>
								</Commandbutton>
								<Text Name='Add Level Title'>
									<X>100</X>
									<Y>60</Y>
									<Width>350</Width>
									<Height>20</Height>
									<Font Template='Tahoma'>
										<Color>FFEBDEAA</Color>
									</Font>
									<Text>Add ALL Level             Recipes X Qty:</Text>
								</Text>
								<Textentry Name='Qty Level Value'>
									<X>300</X>
									<Y>60</Y>
									<Width>33</Width>
									<Height>20</Height>
									<MaxLength>3</MaxLength>
									<Color>FFDDBB00</Color>
								</Textentry>
								<Textentry Name='Level Value'>
									<X>180</X>
									<Y>60</Y>
									<Width>30</Width>
									<Height>20</Height>
									<MaxLength>3</MaxLength>
									<Color>FFDDBB00</Color>
								</Textentry>
								<Commandbutton Name='Add Level'>
									<X>5</X>
									<Y>60</Y>
									<Width>85</Width>
									<Height>20</Height>
									<Text>Add Level</Text>
									<OnLeftClick>
										if !${thisbuttonadd}
										{
										thisbuttonadd:Set[1]
										UIElement[Craft Selection].FindUsableChild[Add Level,commandbutton]:Hide
										Script[EQ2Craft]:QueueCommand[Craft:LoadLevel]
										}
									</OnLeftClick>
								</Commandbutton>
								<Commandbutton Name='Submit Button'>
									<X>25</X>
									<Y>100</Y>
									<Width>100</Width>
									<Height>30</Height>
									<Text>Submit Queue</Text>
									<OnLeftClick>
										if !${thisbuttonsubmit}
										{
										thisbuttonsubmit:Set[1]
										Script[EQ2Craft]:QueueCommand[call ProcessQueue]
										}
									</OnLeftClick>
								</Commandbutton>
								<Commandbutton Name='Save Recipe Queue'>
									<X>155</X>
									<Y>100</Y>
									<Width>100</Width>
									<Height>30</Height>
									<Text>Save Queue</Text>
									<OnLeftClick>
										Script[EQ2Craft]:QueueCommand[call SaveQueueList]
									</OnLeftClick>
								</Commandbutton>
								<Commandbutton Name='Clear Recipe Queue'>
									<X>280</X>
									<Y>100</Y>
									<Width>100</Width>
									<Height>30</Height>
									<Text>Clear Queue</Text>
									<OnLeftClick>
										if !${thisbuttonlist}
										{
										thisbuttonlist:Set[1]
										Script[EQ2Craft]:QueueCommand[Craft:ClearAllRecipes]
										}
									</OnLeftClick>
								</Commandbutton>
								<Text Name='Gauge List Label'>
									<Visible>0</Visible>
									<Font Template='Tahoma'>
										<Color>FFEBDEAA</Color>
									</Font>
									<X>30%</X>
									<Y>98</Y>
									<Width>500</Width>
									<Height>20</Height>
									<Text>Clearing the Recipe Queue..</Text>
								</Text>
								<VariableGauge Name="List Recipe">
									<Visible>0</Visible>
									<Data>${Script[EQ2Craft].Variable[gaugelevel]}</Data>
									<X>106</X>
									<Y>114</Y>
									<Border>3</Border>
									<Width>200</Width>
									<Height>15</Height>
								</VariableGauge>


								<Frame Name='Crafting List Frame'>
									<X>0</X>
									<Y>135</Y>
									<Height>170</Height>
									<Width>400</Width>
									<Visible>0</Visible>
									<Children>
										<Button Name='Craft Title'>
											<X>0</X>
											<Y>0</Y>
											<Width>100%</Width>
											<Height>30</Height>
											<TextColor>FFEECC00</TextColor>
											<Text>Current list of Recipes in Queue</Text>
										</Button>
										<Listbox Name='Craft List'>
											<X>0</X>
											<Y>25</Y>
											<Width>100%</Width>
											<Height>r5</Height>
											<Font Template='Tahoma'>
												<Size>18</Size>
												<Bold />
											</Font>
											<Texture />
											<SelectMultiple>1</SelectMultiple>
											<Sort>Text</Sort>
										</Listbox>
									</Children>
								</Frame>

							</Tab>
							<Tab Name='Options'>
								<Tabcontrol Name='SubOptions'>
									<X>2%</X>
									<Y>2%</Y>
									<Height>96%</Height>
									<Width>96%</Width>
									<Tabs>
										<Tab Name='General Options'>
											<Commandcheckbox Name='Power Check'>
												<Font Template='Tahoma'>
													<Color>FFEBDEAA</Color>
												</Font>
												<X>10</X>
												<Y>20</Y>
												<Width>100</Width>
												<Height>20</Height>
												<Text>Wait for Power to Regenerate to:              % before crafting Recipe</Text>
												<Command>noop ${Script[EQ2Craft].Variable[WaitforPower]:Set[TRUE]} noop ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</Command>
												<CommandChecked>noop ${Script[EQ2Craft].Variable[WaitforPower]:Set[FALSE]} noop ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</CommandChecked>
												<Data>${Script[EQ2Craft].Variable[WaitforPower]}</Data>
											</Commandcheckbox>
											<Textentry Name='Power Regen'>
												<X>190</X>
												<Y>20</Y>
												<Width>35</Width>
												<Height>20</Height>
												<MaxLength>4</MaxLength>
												<Color>FFDDBB00</Color>
											</Textentry>
											<Commandcheckbox Name='Camp Out'>
												<Font Template='Tahoma'>
													<Color>FFEBDEAA</Color>
												</Font>
												<X>10</X>
												<Y>40</Y>
												<Width>100</Width>
												<Height>20</Height>
												<Text>Camp out if this craft session has exceeded                   mins</Text>
												<Command>noop ${Script[EQ2Craft].Variable[CampOut]:Set[TRUE]} noop ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</Command>
												<CommandChecked>noop ${Script[EQ2Craft].Variable[CampOut]:Set[FALSE]} noop ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</CommandChecked>
												<Data>${Script[EQ2Craft].Variable[CampOut]}</Data>
											</Commandcheckbox>
											<Textentry Name='Camp Timer'>
												<X>240</X>
												<Y>40</Y>
												<Width>45</Width>
												<Height>20</Height>
												<MaxLength>4</MaxLength>
												<Color>FFDDBB00</Color>
												<OnLoad>This:SetText[${Script[EQ2Craft].Variable[CampTimer]}]</OnLoad>
												<OnChange>
													LavishSettings[Craft Config File].FindSet[General Options].FindSetting[Camp out after a specified time has elapsed for a crafting session?]:Set[${This.Text}]
													Script[EQ2Craft].Variable[CampTimer]:Set[${This.Text}]
													LavishSettings[Craft Config File]:Export[${Script[EQ2Craft].Variable[configfile]}]
												</OnChange>
											</Textentry>
											<Commandcheckbox name='Auto Transmute'>
												<Font Template='Tahoma'>
													<Color>FFEBDEAA</Color>
												</Font>
												<X>10</X>
												<Y>60</Y>
												<Width>150</Width>
												<Height>20</Height>
												<Text>Automatically Transmute Master Crafted Items after Creation</Text>
												<Command>noop ${Script[EQ2Craft].Variable[AutoTransmute]:Set[TRUE]}</Command>
												<CommandChecked>noop ${Script[EQ2Craft].Variable[AutoTransmute]:Set[FALSE]}</CommandChecked>
												<Data>${Script[EQ2Craft].Variable[AutoTransmute]}</Data>
											</Commandcheckbox>
											<Commandcheckbox name='Stop Crafting At Secondary Max Level'>
												<Font Template='Tahoma'>
													<Color>FFEBDEAA</Color>
												</Font>
												<X>10</X>
												<Y>80</Y>
												<Width>150</Width>
												<Height>20</Height>
												<Text>Stop crafting when secondary tradeskill achieves maximum level</Text>
												<Command>noop ${Script[EQ2Craft].Variable[StopCraftingAtSecondaryMaxLevel]:Set[TRUE]}</Command>
												<CommandChecked>noop ${Script[EQ2Craft].Variable[StopCraftingAtSecondaryMaxLevel]:Set[FALSE]}</CommandChecked>
												<Data>${Script[EQ2Craft].Variable[StopCraftingAtSecondaryMaxLevel]}</Data>
											</Commandcheckbox>
											<Commandcheckbox Name='Save Recipe List Range'>
												<Font Template='Tahoma'>
													<Color>FFEBDEAA</Color>
												</Font>
												<X>10</X>
												<Y>100</Y>
												<Width>100</Width>
												<Height>20</Height>
												<Text>Save recipe list range</Text>
												<Command>noop ${Script[EQ2Craft].Variable[RecipeListRange]:Set[TRUE]} ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</Command>
												<CommandChecked>noop ${Script[EQ2Craft].Variable[RecipeListRange]:Set[FALSE]} noop ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</CommandChecked>
												<Data>${Script[EQ2Craft].Variable[RecipeListRange]}</Data>
											</Commandcheckbox>
											<Commandcheckbox Name='GuildPrivacy'>
												<Font Template='Tahoma'>
													<Color>FFEBDEAA</Color>
												</Font>
												<X>10</X>
												<Y>120</Y>
												<Width>100</Width>
												<Height>20</Height>
												<Text>Disable guild notifications while crafting writs</Text>
												<Command>noop ${Script[EQ2Craft].Variable[GuildPrivacy]:Set[TRUE]} ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</Command>
												<CommandChecked>noop ${Script[EQ2Craft].Variable[GuildPrivacy]:Set[FALSE]} noop ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</CommandChecked>
												<Data>${Script[EQ2Craft].Variable[GuildPrivacy]}</Data>
											</Commandcheckbox>
											<Commandcheckbox Name='GuildPrivacyAlways'>
												<Font Template='Tahoma'>
													<Color>FFEBDEAA</Color>
												</Font>
												<X>10</X>
												<Y>140</Y>
												<Width>100</Width>
												<Height>20</Height>
												<Text>Disable guild notifications while craft is running (ALWAYS)</Text>
												<Command>noop ${Script[EQ2Craft].Variable[GuildPrivacyAlways]:Set[TRUE]} ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</Command>
												<CommandChecked>noop ${Script[EQ2Craft].Variable[GuildPrivacyAlways]:Set[FALSE]} noop ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</CommandChecked>
												<Data>${Script[EQ2Craft].Variable[GuildPrivacyAlways]}</Data>
											</Commandcheckbox>
											<Commandcheckbox Name='DeclineInvites'>
												<Font Template='Tahoma'>
													<Color>FFEBDEAA</Color>
												</Font>
												<X>10</X>
												<Y>160</Y>
												<Width>100</Width>
												<Height>20</Height>
												<Text>Ignore Duels, Trades, and Groups when craft script is running</Text>
												<OnLeftClick>
													Script[EQ2Craft].Variable[DeclineInvites]:Set[${This.Checked}]
													Script[EQ2Craft]:ExecuteAtom[UpdateSettings]
													Script[EQ2Craft].VariableScope.Craft:DoIgnores[${This.Checked}]
												</OnLeftClick>
												<Data>${Script[EQ2Craft].VariableScope.DeclineInvites}</Data>
											</Commandcheckbox>
											<Text Name='Craft Delay Text'>
												<X>30</X>
												<Y>182</Y>
												<Width>100%</Width>
												<Height>20</Height>
												<Font Template='Tahoma'>
													<Color>FFEBDEAA</Color>
												</Font>
												<Text>Time to wait between combines:               seconds</Text>
											</Text>
											<Textentry Name='Craft Delay'>
												<X>190</X>
												<Y>182</Y>
												<Width>35</Width>
												<Height>20</Height>
												<MaxLength>4</MaxLength>
												<Color>FFDDBB00</Color>
												<OnLoad>This:SetText[${Script[EQ2Craft].Variable[CraftDelay]}]</OnLoad>
												<OnChange>
													LavishSettings[Craft Config File].FindSet[General Options].FindSetting[Time to wait between combines?]:Set[${This.Text}]
													Script[EQ2Craft].Variable[CraftDelay]:Set[${This.Text}]
													LavishSettings[Craft Config File]:Export[${Script[EQ2Craft].Variable[configfile]}]
												</OnChange>
											</Textentry>
											<Commandcheckbox Name='Craft TTS'>
												<X>10</X>
												<Y>200</Y>
												<Width>100</Width>
												<Height>20</Height>
												<Text>Enable TTS</Text>
												<Autotooltip>
													Enables Text to Speech support.
													Requires LSMTTS.dll, available separately in the Modules folder of SVN.
												</Autotooltip>
												<OnLeftClick>
													Script[EQ2Craft].VariableScope.EnableTTS:Set[${This.Checked}]
													Script[EQ2Craft]:ExecuteAtom[UpdateSettings]
												</OnLeftClick>
												<Data>${Script[EQ2Craft].VariableScope.EnableTTS}</Data>
											</Commandcheckbox>

										</Tab>
										<Tab Name='Shopping'>
											<Commandcheckbox Name='Show All Lists'>
												<Font Template='Tahoma'>
													<Color>FFEBDEAA</Color>
												</Font>
												<X>10</X>
												<Y>20</Y>
												<Width>100</Width>
												<Height>20</Height>
												<Text>Show entire Shopping List</Text>
												<Command>noop ${Script[EQ2Craft].Variable[ShowAllLists]:Set[TRUE]} noop ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</Command>
												<CommandChecked>noop ${Script[EQ2Craft].Variable[ShowAllLists]:Set[FALSE]} noop ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</CommandChecked>
												<Data>${Script[EQ2Craft].Variable[ShowAllLists]}</Data>
											</Commandcheckbox>
											<Commandcheckbox Name='Prompt Resume'>
												<Font Template='Tahoma'>
													<Color>FFEBDEAA</Color>
												</Font>
												<X>10</X>
												<Y>40</Y>
												<Width>100</Width>
												<Height>20</Height>
												<Text>Prompt 'Resume Crafting' when buying Harvests</Text>
												<Command>noop ${Script[EQ2Craft].Variable[PromptResume]:Set[TRUE]} noop ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</Command>
												<CommandChecked>noop ${Script[EQ2Craft].Variable[PromptResume]:Set[FALSE]} noop ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</CommandChecked>
												<Data>${Script[EQ2Craft].Variable[PromptResume]}</Data>
											</Commandcheckbox>
											<Commandcheckbox Name='BuyCommon'>
												<Font Template='Tahoma'>
													<Color>FFEBDEAA</Color>
												</Font>
												<X>10</X>
												<Y>60</Y>
												<Width>150</Width>
												<Height>20</Height>
												<Text>Buy ALL Vendor bought COMMON components automatically.</Text>
												<Command>noop ${Script[EQ2Craft].Variable[BuyCommon]:Set[TRUE]} noop ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</Command>
												<CommandChecked>noop ${Script[EQ2Craft].Variable[BuyCommon]:Set[FALSE]} noop ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</CommandChecked>
												<Data>${Script[EQ2Craft].Variable[BuyCommon]}</Data>
											</Commandcheckbox>
											<Commandcheckbox Name='BuyFuel'>
												<Font Template='Tahoma'>
													<Color>FFEBDEAA</Color>
												</Font>
												<X>10</X>
												<Y>80</Y>
												<Width>150</Width>
												<Height>20</Height>
												<Text>Buy ALL FUEL components automatically.</Text>
												<Command>noop ${Script[EQ2Craft].Variable[BuyFuel]:Set[TRUE]} noop ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</Command>
												<CommandChecked>noop ${Script[EQ2Craft].Variable[BuyFuel]:Set[FALSE]} noop ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</CommandChecked>
												<Data>${Script[EQ2Craft].Variable[BuyFuel]}</Data>
											</Commandcheckbox>
											<Commandcheckbox Name='BuyHarvest'>
												<Font Template='Tahoma'>
													<Color>FFEBDEAA</Color>
												</Font>
												<X>10</X>
												<Y>100</Y>
												<Width>150</Width>
												<Height>20</Height>
												<Text>Buy ALL Harvests from Broker to a MAX PRICE:                  (Silver)</Text>
												<Command>noop ${Script[EQ2Craft].Variable[BuyHarvest]:Set[TRUE]} noop ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</Command>
												<CommandChecked>noop ${Script[EQ2Craft].Variable[BuyHarvest]:Set[FALSE]} noop ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</CommandChecked>
												<Data>${Script[EQ2Craft].Variable[BuyHarvest]}</Data>
											</Commandcheckbox>
											<Textentry Name='Max Buy Price'>
												<X>280</X>
												<Y>97</Y>
												<Width>45</Width>
												<Height>20</Height>
												<MaxLength>5</MaxLength>
												<Color>FFDDBB00</Color>
												<OnLoad>This:SetText[${Script[EQ2Craft].Variable[MaxBuyPrice]}]</OnLoad>
												<OnChange>
													LavishSettings[Craft Config File].FindSet[General Options].FindSetting[Specify the MAXIMUM price for purchasing Resources]:Set[${This.Text}]
													Script[EQ2Craft].Variable[MaxBuyPrice]:Set[${This.Text}]
													LavishSettings[Craft Config File]:Export[${Script[EQ2Craft].Variable[configfile]}]
												</OnChange>
											</Textentry>

										</Tab>
										<Tab Name='Movement'>
											<Frame Name='MovementFrame'>
												<X>10</X>
												<Y>5</Y>
												<Width>r20</Width>
												<Height>r10</Height>
												<Children>
													<Text Name='MovementKeysLabel'>
														<Font Template='Tahoma'>
															<Color>FFEBDEAA</Color>
														</Font>
														<X>10</X>
														<Y>0</Y>
														<Width>25%</Width>
														<Height>20</Height>
														<Text>Movement Keys:</Text>
													</Text>
													<Text Name='AutoRunKeyLabel'>
														<Font Template='Tahoma'>
															<Color>FFEBDEAA</Color>
														</Font>
														<X>20</X>
														<Y>20</Y>
														<Width>20%</Width>
														<Height>20</Height>
														<Text>AutoRun:</Text>
													</Text>
													<Textentry Name='TEAutoRunKey'>
														<X>25%</X>
														<Y>20</Y>
														<Width>20%</Width>
														<Height>20</Height>
														<MaxLength>20</MaxLength>
														<Color>FFDDBB00</Color>
														<OnLoad>This:SetText[${Script[EQ2Craft].Variable[AutoRunKey]}]</OnLoad>
														<OnChange>
															if ${ICraft.Version} >= 8.97
															{
																ICraft:SetKeys
															}
															else
															{

																LavishSettings[Craft Config File].FindSet[General Options].FindSetting[AutoRun Key]:Set[${This.Text}]
																Script[EQ2Craft].Variable[AutoRunKey]:Set[${This.Text}]
																LavishSettings[Craft Config File]:Export[${Script[EQ2Craft].Variable[configfile]}]
																Script[EQ2Craft]:QueueCommand[Craft:UpdateNavKeys]
															}
														</OnChange>
													</Textentry>
													<Text Name='BackupKeyLabel'>
														<Font Template='Tahoma'>
															<Color>FFEBDEAA</Color>
														</Font>
														<X>20</X>
														<Y>40</Y>
														<Width>20%</Width>
														<Height>20</Height>
														<Text>Backward:</Text>
													</Text>
													<Textentry Name='TEBackwardKey'>
														<X>25%</X>
														<Y>40</Y>
														<Width>20%</Width>
														<Height>20</Height>
														<MaxLength>20</MaxLength>
														<Color>FFDDBB00</Color>
														<OnLoad>This:SetText[${Script[EQ2Craft].Variable[BackwardKey]}]</OnLoad>
														<OnChange>
															if ${ICraft.Version} >= 8.97
															{
																ICraft:SetKeys
															}
															else
															{
																LavishSettings[Craft Config File].FindSet[General Options].FindSetting[Backwards Key]:Set[${This.Text}]
																Script[EQ2Craft].Variable[BackwardKey]:Set[${This.Text}]
																LavishSettings[Craft Config File]:Export[${Script[EQ2Craft].Variable[configfile]}]
																Script[EQ2Craft]:QueueCommand[Craft:UpdateNavKeys]
															}
														</OnChange>
													</Textentry>
													<Text Name='StrafeRightKeyLabel'>
														<Font Template='Tahoma'>
															<Color>FFEBDEAA</Color>
														</Font>
														<X>20</X>
														<Y>60</Y>
														<Width>20%</Width>
														<Height>20</Height>
														<Text>Strafe Right:</Text>
													</Text>
													<Textentry Name='TEStrafeRightKey'>
														<X>25%</X>
														<Y>60</Y>
														<Width>20%</Width>
														<Height>20</Height>
														<MaxLength>20</MaxLength>
														<Color>FFDDBB00</Color>
														<OnLoad>This:SetText[${Script[EQ2Craft].Variable[StrafeRightKey]}]</OnLoad>
														<OnChange>
															if ${ICraft.Version} >= 8.97
															{
																ICraft:SetKeys
															}
															else
															{
																LavishSettings[Craft Config File].FindSet[General Options].FindSetting[StrafeRight Key]:Set[${This.Text}]
																Script[EQ2Craft].Variable[StrafeRightKey]:Set[${This.Text}]
																LavishSettings[Craft Config File]:Export[${Script[EQ2Craft].Variable[configfile]}]
																Script[EQ2Craft]:QueueCommand[Craft:UpdateNavKeys]
															}
														</OnChange>
													</Textentry>
													<Text Name='StrafeLeftKeyLabel'>
														<Font Template='Tahoma'>
															<Color>FFEBDEAA</Color>
														</Font>
														<X>20</X>
														<Y>80</Y>
														<Width>20%</Width>
														<Height>20</Height>
														<Text>Strafe Left:</Text>
													</Text>
													<Textentry Name='TEStrafeLeftKey'>
														<X>25%</X>
														<Y>80</Y>
														<Width>20%</Width>
														<Height>20</Height>
														<MaxLength>20</MaxLength>
														<Color>FFDDBB00</Color>
														<OnLoad>This:SetText[${Script[EQ2Craft].Variable[StrafeLeftKey]}]</OnLoad>
														<OnChange>
															if ${ICraft.Version} >= 8.97
															{
																ICraft:SetKeys
															}
															else
															{
																LavishSettings[Craft Config File].FindSet[General Options].FindSetting[StrafeLeft Key]:Set[${This.Text}]
																Script[EQ2Craft].Variable[StrafeLeftKey]:Set[${This.Text}]
																LavishSettings[Craft Config File]:Export[${Script[EQ2Craft].Variable[configfile]}]
																Script[EQ2Craft]:QueueCommand[Craft:UpdateNavKeys]
															}
														</OnChange>
													</Textentry>
													<Commandcheckbox Name='Current Table'>
														<Font Template='Tahoma'>
															<Color>FFEBDEAA</Color>
														</Font>
														<X>10</X>
														<Y>110</Y>
														<Width>100</Width>
														<Height>20</Height>
														<Text>Use the current TARGETTED Station ONLY (No movement)</Text>
														<Command>noop ${Script[EQ2Craft].Variable[CurrentStation]:Set[TRUE]} noop ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</Command>
														<CommandChecked>noop ${Script[EQ2Craft].Variable[CurrentStation]:Set[FALSE]} noop ${Script[EQ2Craft]:ExecuteAtom[UpdateSettings]}</CommandChecked>
														<Data>${Script[EQ2Craft].Variable[CurrentStation]}</Data>
													</Commandcheckbox>

												</Children>
											</Frame>
										</Tab>
										<Tab Name='Thresholds'>
											<Frame Name='ThresholdsFrame'>
												<X>10</X>
												<Y>5</Y>
												<Width>r20</Width>
												<Height>r10</Height>
												<Children>
													<Text Name='Path Precision Text'>
														<X>20</X>
														<Y>27</Y>
														<Width>100%</Width>
														<Height>20</Height>
														<Font Template='Tahoma'>
															<Color>FFEBDEAA</Color>
														</Font>
														<Visible>FALSE</Visible>
														<Text>Precision for running path:</Text>
													</Text>
													<Textentry Name='Path Precision'>
														<X>190</X>
														<Y>22</Y>
														<Width>35</Width>
														<Height>20</Height>
														<MaxLength>4</MaxLength>
														<Visible>FALSE</Visible>
														<OnLoad>This:SetText[${Script[EQ2Craft].Variable[PathPrecision]}]</OnLoad>
														<OnChange>
															LavishSettings[Craft Config File].FindSet[General Options].FindSetting[Pather Precision]:Set[${This.Text}]
															Script[EQ2Craft].Variable[PathPrecision]:Set[${This.Text}]
															LavishSettings[Craft Config File]:Export[${Script[EQ2Craft].Variable[configfile]}]
														</OnChange>
														<Color>FFDDBB00</Color>
													</Textentry>
													<Text Name='Threshold Text'>
														<X>0</X>
														<Y>45</Y>
														<Width>100%</Width>
														<Height>20</Height>
														<Alignment>Center</Alignment>
														<Font Template='Tahoma'>
															<Color>FFEBDEAA</Color>
														</Font>
														<Alignment>Center</Alignment>
														<Text>-= Durability Threshold for Standard and Rare Recipes =-</Text>
													</Text>
													<Text Name='Quality 1 Text'>
														<X>5%</X>
														<Y>70</Y>
														<Width>100%</Width>
														<Height>20</Height>
														<Font Template='Tahoma'>
															<Size>17</Size>
															<Color>FFEBDEAA</Color>
														</Font>
														<Text>* Standard Quality 1:            %   * Rare Quality 1:           %</Text>
														<AutoTooltip>Will cast progress + durability if DUR is below this.</AutoTooltip>
													</Text>
													<Textentry Name='Standard Quality1'>
														<X>153</X>
														<Y>65</Y>
														<Width>35</Width>
														<Height>20</Height>
														<MaxLength>4</MaxLength>
														<Color>FFDDBB00</Color>
													</Textentry>
													<Textentry Name='Rare Quality1'>
														<X>320</X>
														<Y>65</Y>
														<Width>35</Width>
														<Height>20</Height>
														<MaxLength>4</MaxLength>
														<Color>FFDDBB00</Color>
													</Textentry>
													<Text Name='Quality 2 Text'>
														<X>5%</X>
														<Y>100</Y>
														<Width>100%</Width>
														<Height>20</Height>
														<Font Template='Tahoma'>
															<Size>17</Size>
															<Color>FFEBDEAA</Color>
														</Font>
														<Text>* Standard Quality 2:            %   * Rare Quality 2:           %</Text>
														<AutoTooltip>Will cast pure durability if DUR is below this.</AutoTooltip>
													</Text>
													<Textentry Name='Standard Quality2'>
														<X>153</X>
														<Y>95</Y>
														<Width>35</Width>
														<Height>20</Height>
														<MaxLength>4</MaxLength>
														<Color>FFDDBB00</Color>
													</Textentry>
													<Textentry Name='Rare Quality2'>
														<X>320</X>
														<Y>95</Y>
														<Width>35</Width>
														<Height>20</Height>
														<MaxLength>4</MaxLength>
														<Color>FFDDBB00</Color>
													</Textentry>
													<Text Name='Quality 3 Text'>
														<X>5%</X>
														<Y>130</Y>
														<Width>100%</Width>
														<Height>20</Height>
														<Font Template='Tahoma'>
															<Size>17</Size>
															<Color>FFEBDEAA</Color>
														</Font>
														<!--	<Text>* Standard Quality 3:       %   * Rare Quality 3:       %</text> -->
														<Text> * Standard Power 3:            %    * Rare Power 3:           %</Text>
														<AutoTooltip>Will spam power-consuming buff if power is above this.</AutoTooltip>
													</Text>
													<Textentry Name='Standard Quality3'>
														<X>153</X>
														<Y>125</Y>
														<Width>35</Width>
														<Height>20</Height>
														<MaxLength>4</MaxLength>
														<Color>FFDDBB00</Color>
													</Textentry>
													<Textentry Name='Rare Quality3'>
														<X>320</X>
														<Y>125</Y>
														<Width>35</Width>
														<Height>20</Height>
														<MaxLength>4</MaxLength>
														<Color>FFDDBB00</Color>
													</Textentry>
													<Commandbutton Name='Save Threshold'>
														<X>80</X>
														<Y>185</Y>
														<Width>100</Width>
														<Height>20</Height>
														<Text>Save Threshold</Text>
														<OnLeftClick>
															Script[EQ2Craft]:QueueCommand[Craft:SaveThreshold]
														</OnLeftClick>
													</Commandbutton>
													<Commandbutton Name='Reset Threshold'>
														<X>240</X>
														<Y>185</Y>
														<Width>100</Width>
														<Height>20</Height>
														<Text>Reset Threshold</Text>
														<OnLeftClick>
															Script[EQ2Craft]:QueueCommand[Craft:ResetThreshold]
														</OnLeftClick>
													</Commandbutton>
												</Children>
											</Frame>
										</Tab>
									</Tabs>
								</Tabcontrol>

							</Tab>
							<Tab Name='Writs'>
								<Text Name='Writ Count Label'>
									<Font Template='Tahoma'>
										<Bold />
										<Size>18</Size>
										<Color>FFEBDEAA</Color>
									</Font>
									<X>30</X>
									<Y>15</Y>
									<Width>500</Width>
									<Height>20</Height>
									<Text>Writ Count:</Text>
									<AutoTooltip>Number of writs to complete before stopping. Max: 5</AutoTooltip>
			<OnLoad>
				declarevariable CG_Frame_Counter int global 0
			</OnLoad>
			<OnUnload>
				deletevariable CG_Frame_Counter
			</OnUnload>
			<OnRender>
				if ${CG_Frame_Counter} == 0
				{
				if ${Script[EQ2Craft].Variable[CraftVersion]} &gt; 8.93
				{
					if ${Zone.ShortName.Find[guildhall]}
					{
			if !${This.Parent.FindChild[NumWrits].Visible}
				This.Parent.FindChild[NumWrits]:Show
			if ${This.Parent.FindChild[NumWritsOOG].Visible}
				This.Parent.FindChild[NumWritsOOG]:Hide
					}
					else
					{
			if !${This.Parent.FindChild[NumWritsOOG].Visible}
				This.Parent.FindChild[NumWritsOOG]:Show
			if ${This.Parent.FindChild[NumWrits].Visible}
				This.Parent.FindChild[NumWrits]:Hide
					}
				}
				else
				{
			if !${This.Parent.FindChild[NumWritsOOG].Visible}
				This.Parent.FindChild[NumWritsOOG]:Show
			if ${This.Parent.FindChild[NumWrits].Visible}
				This.Parent.FindChild[NumWrits]:Hide
				}
				}
				CG_Frame_Counter:Set[${Math.Calc[(${CG_Frame_Counter}+1)%10]}]
			</OnRender>
			</Text>
			<Textentry Name='Writ Count'>
				<X>130</X>
				<Y>100</Y>
				<Width>35</Width>
				<Height>20</Height>
				<MaxLength>4</MaxLength>
				<Color>FFDDBB00</Color>
			<Visible>0</Visible>
<!--
			<OnLoad>This:SetText[${Script[EQ2Craft].Variable[WritCount]}]</OnLoad>
			<OnChange>
				LavishSettings[Craft Config File].FindSet[General Options].FindSetting[How many Writs to create per craft session?]:Set[${This.Text}]
				Script[EQ2Craft].Variable[WritCount]:Set[${This.Text}]
				LavishSettings[Craft Config File]:Export[${Script[EQ2Craft].Variable[configfile]}]
			</OnChange>
			<AutoTooltip>Number of writs to complete before stopping. Max: 5</AutoTooltip>
-->
		</Textentry>
		<Text Name='NumWrits'>
			<X>130</X>
			<Y>15</Y>
			<Width>35</Width>
			<Height>20</Height>
			<Color>FFDDBB00</Color>
			<OnLoad>
				if ${Script[EQ2Craft].Variable[CraftVersion]} &lt;= 8.93
				{
					This:Hide
				}
				This:SetText[${Script[EQ2Craft].Variable[WritCount]}]
			</OnLoad>
		</Text>
		<Text Name='NumWritsOOG'>
			<X>130</X>
			<Y>15</Y>
			<Width>35</Width>
			<Height>20</Height>
			<Color>FFDDBB00</Color>
		</Text>
		<Slider Name='WritSlider'>
			<X>30</X>
			<Y>35</Y>
			<Width>120</Width>
			<Height>20</Height>
			<Range>24</Range>
			<OnLoad>
				This:SetValue[${Math.Calc[${This.Parent.FindChild[NumWrits].Text} - 1].Int}]
				This.Parent.FindChild[NumWritsOOG]:SetText[${Math.Calc[(${This.Value}/2)+1].Int}]
				if ${Script[EQ2Craft].Variable[CraftVersion]} &lt;= 8.93
				{
					This.Parent.FindChild[Writ Count]:SetText[${This.Parent.FindChild[NumWritsOOG].Text}]
										}
			</OnLoad>
			<OnChange>
				variable int ThisValue=${Math.Calc[${This.Value}+1].Int}
				This.Parent.FindChild[NumWrits]:SetText[${ThisValue}]
				This.Parent.FindChild[NumWritsOOG]:SetText[${Math.Calc[(${This.Value}/2)+1].Int}]
				if ${Script[EQ2Craft].Variable[CraftVersion]} &lt;= 8.93
				{
					This.Parent.FindChild[Writ Count]:SetText[${This.Parent.FindChild[NumWritsOOG].Text}]
										}
										LavishSettings[Craft Config File].FindSet[General Options].FindSetting[How many Writs to create per craft session?]:Set[${ThisValue}]
										Script[EQ2Craft].Variable[WritCount]:Set[${ThisValue}]
										LavishSettings[Craft Config File]:Export[${Script[EQ2Craft].Variable[configfile]}]

			</OnChange>
		</Slider>



								<!-- <Text Name='Writ Qty Label'>
									<Font Template='Tahoma'>
										<Color>FFEBDEAA</Color>
									</Font>
									<X>135</X>
									<Y>20</Y>
									<Width>500</Width>
									<Height>20</Height>
									<Text>Quantity:</Text>
								</Text>
								<Textentry Name='Writ Qty'>
									<X>190</X>
									<Y>10</Y>
									<Width>35</Width>
									<Height>20</Height>
									<MaxLength>4</MaxLength>
									<Color>FFDDBB00</Color>
									<OnLoad>This:SetText[${Script[EQ2Craft].Variable[WritQty]}]</OnLoad>
									<OnChange>
										LavishSettings[Craft Config File].FindSet[General Options].FindSetting[How many Recipes per Writ?]:Set[${This.Text}]
										Script[EQ2Craft].Variable[WritQty]:Set[${This.Text}]
										LavishSettings[Craft Config File]:Export[${Script[EQ2Craft].Variable[configfile]}]
									</OnChange>
								</Textentry> -->
								<Text Name='Tier Label'>
									<Font Template='Tahoma'>
										<Bold />
										<Size>18</Size>
										<Color>FFEBDEAA</Color>
									</Font>
									<X>200</X>
									<Y>15</Y>
									<Width>500</Width>
									<Height>20</Height>
									<Text>Choice:</Text>
									<AutoTooltip>Conversation choice for writ selection, starting with 1 at the top.</AutoTooltip>
								</Text>
								<Textentry Name='Tier'>
									<X>280</X>
									<Y>10</Y>
									<Width>35</Width>
									<Height>20</Height>
									<MaxLength>4</MaxLength>
									<Color>FFDDBB00</Color>
									<OnLoad>This:SetText[${Script[EQ2Craft].Variable[Tier]}]</OnLoad>
									<OnChange>
										LavishSettings[Craft Config File].FindSet[General Options].FindSetting[Which Writ Tier to use?]:Set[${This.Text}]
										Script[EQ2Craft].Variable[Tier]:Set[${This.Text}]
										LavishSettings[Craft Config File]:Export[${Script[EQ2Craft].Variable[configfile]}]
									</OnChange>
									<AutoTooltip>Conversation choice for writ selection, starting with 1 at the top.</AutoTooltip>
								</Textentry>
								<Commandbutton Name='Create Work Order'>
									<X>240</X>
									<Y>70</Y>
									<Width>120</Width>
									<Height>20</Height>
									<Text>Create Work Orders</Text>
									<OnLeftClick>
										ICraft:StartWO
									</OnLeftClick>
								</Commandbutton>
								<Commandbutton Name='Create Rush Order'>
									<X>240</X>
									<Y>40</Y>
									<Width>120</Width>
									<Height>20</Height>
									<Text>Create Rush Orders</Text>
									<OnLeftClick>
										ICraft:StartRO
									</OnLeftClick>
								</Commandbutton>
							</Tab>
							<Tab Name='Shopping'>
								<Frame Name='Harvest Frame'>
									<X>10</X>
									<Y>10</Y>
									<Height>r10</Height>
									<Width>r20</Width>
									<Visible>0</Visible>
									<Children>
										<Button Name='Harvest Title'>
											<X>0</X>
											<Y>0</Y>
											<Width>100%</Width>
											<Height>15</Height>
											<TextColor>FFEECC00</TextColor>
											<Text>RAW HARVESTED RESOURCES</Text>
										</Button>
										<Listbox Name='Harvest Resource List'>
											<X>0</X>
											<Y>16</Y>
											<Width>100%</Width>
											<Height>88</Height>
											<Font Template='Tahoma'>
											</Font>
											<Texture />
											<SelectMultiple>1</SelectMultiple>
											<OnSelect>
												broker Name "${This.Item[${ID}].Text.Token[1,|]}" Sort ByPriceAsc MinTier Handcrafted MaxTier Treasured
											</OnSelect>
											<Sort>Text</Sort>
										</Listbox>
										<Button Name='Vendor Bought Title'>
											<X>0</X>
											<Y>106</Y>
											<Width>100%</Width>
											<Height>15</Height>
											<TextColor>FFEECC00</TextColor>
											<Text>VENDOR BOUGHT COMPONENTS</Text>
										</Button>
										<Listbox Name='Vendor Bought List'>
											<X>0</X>
											<Y>122</Y>
											<Width>100%</Width>
											<Height>88</Height>
											<Font Template='Tahoma'>
											</Font>
											<SelectMultiple>1</SelectMultiple>
											<Texture />
											<Sort>Text</Sort>
										</Listbox>
										<Button Name='Fuel Title'>
											<X>0</X>
											<Y>212</Y>
											<Width>100%</Width>
											<Height>15</Height>
											<TextColor>FFEECC00</TextColor>
											<Text>FUEL COMPONENTS</Text>
										</Button>
										<Listbox Name='Fuel List'>
											<X>0</X>
											<Y>228</Y>
											<Width>100%</Width>
											<Height>88</Height>
											<Font Template='Tahoma'>
											</Font>
											<SelectMultiple>1</SelectMultiple>
											<Texture />
											<Sort>Text</Sort>
										</Listbox>

									</Children>
								</Frame>
							</Tab>
							<Tab Name='About'>
								<Text Name='Craft About Title'>
									<X>0</X>
									<Y>10</Y>
									<Width>100%</Width>
									<Height>15</Height>
									<Alignment>Center</Alignment>
									<Font Template='Tahoma'>
										<Color>FFEBDEAA</Color>
									</Font>
									<Text>Automatic Crafting Bot v${Script[EQ2Craft].Variable[CraftVersion]}</Text>
								</Text>
								<Text Name='Craft About By'>
									<X>0</X>
									<Y>25</Y>
									<Width>100%</Width>
									<Height>15</Height>
									<Alignment>Center</Alignment>
									<Font Template='Tahoma'>
										<Color>FFEBDEAA</Color>
									</Font>
									<Text>Originally by Blazer</Text>
								</Text>
								<Text Name='About 1'>
									<X>0</X>
									<Y>40</Y>
									<Width>100%</Width>
									<Height>15</Height>
									<Alignment>Center</Alignment>
									<Font Template='Tahoma'>
										<Color>FFFFFF00</Color>
									</Font>
									<Text>ISXEQ2 was created by Amadeus</Text>
								</Text>
								<Text Name='Contributors'>
									<X>10%</X>
									<Y>60</Y>
									<Width>80%</Width>
									<Height>100</Height>
									<Alignment>Center</Alignment>
									<Wrap />
									<Text>
Over the years, Craft has been maintained by:
Blazer
Hendrix
Amadeus
Valerian
									</Text>
								</Text>
								<Text Name='About 2'>
									<X>0</X>
									<Y>170</Y>
									<Width>100%</Width>
									<Height>15</Height>
									<Alignment>Center</Alignment>
									<Font Template='Tahoma'>
										<Color>FFEBDEAA</Color>
									</Font>
									<Text>For more Information Please see</Text>
								</Text>
								<Text Name='About 3'>
									<X>0</X>
									<Y>185</Y>
									<Width>100%</Width>
									<Height>15</Height>
									<Alignment>Center</Alignment>
									<Font Template='Tahoma'>
										<Color>FFEBDEAA</Color>
									</Font>
									<Text>http://www.isxGames.com/f</Text>
								</Text>
							</Tab>

						</Tabs>
					</Tabcontrol>
				</Children>
			</Frame>
			<Frame Name='Crafting Frame'>
				<X>0</X>
				<Y>0</Y>
				<Height>r10</Height>
				<Width>100%</Width>
				<Visible>0</Visible>
				<Children>
					<Button Name='Process Title'>
						<X>20</X>
						<Y>55</Y>
						<Width>r40</Width>
						<Height>30</Height>
						<TextColor>FFEECC00</TextColor>
						<Text>Current Crafting Progress List</Text>
					</Button>
					<Listbox Name='Process List'>
						<X>20</X>
						<Y>78</Y>
						<Width>r40</Width>
						<Height>r120</Height>
						<Font Template='Tahoma'>
						</Font>
						<SelectMultiple>1</SelectMultiple>
						<Texture />
						<Sort>None</Sort>
					</Listbox>
					<Commandbutton Name='Quit Button'>
						<visible>1</visible>
						<X>20</X>
						<Y>24</Y>
						<Width>65</Width>
						<Height>20</Height>
						<Text>Quit</Text>
						<OnLeftClick>
							Script[EQ2Craft].Variable[endcraft]:Set[TRUE]
							UIElement[Craft Selection].FindUsableChild[Quit Button,commandbutton]:Hide
							UIElement[Craft Selection].FindUsableChild[Pause Button,commandbutton]:Hide
						</OnLeftClick>
					</Commandbutton>
					<Commandbutton Name='Pause Button'>
						<visible>1</visible>
						<X>r85</X>
						<Y>24</Y>
						<Width>65</Width>
						<Height>20</Height>
						<Text>Pause</Text>
						<OnLeftClick>
							if !${thisbuttonpaused}
							{
							thisbuttonpaused:Set[1]
							UIElement[Craft Selection].FindUsableChild[Pause Button,commandbutton]:SetText[Resume]
							}
							else
							{
							thisbuttonpaused:Set[0]
							UIElement[Craft Selection].FindUsableChild[Pause Button,commandbutton]:SetText[Pause]
							}
						</OnLeftClick>
					</Commandbutton>
					<Checkbox Name='Camp Now'>
						<visible>1</visible>
						<Font Template='Tahoma'>
							<Color>FFEBDEAA</Color>
						</Font>
						<X>96</X>
						<Y>24</Y>
						<Width>150</Width>
						<Height>20</Height>
						<Text>Camp out after Craft Session is complete</Text>
						<OnLoad>
							if ${Script[EQ2Craft].Variable[CampNow]}
							{
							UIElement[Camp Now@Craft Selection]:SetChecked
							}
						</OnLoad>
						<OnLeftClick>
							if ${UIElement[Camp Now@Craft Selection].Checked}
							{
							Script[EQ2Craft].Variable[CampNow]:Set[TRUE]
							}
							else
							{
							Script[EQ2Craft].Variable[CampNow]:Set[FALSE]
							}
							Script[EQ2Craft]:ExecuteAtom[UpdateSettings]
						</OnLeftClick>
					</Checkbox>
					<Text Name='Writs Remaining'>
						<X>10</X>
						<Y>r30</Y>
						<Width>r20</Width>
						<Height>20</Height>
						<Alignment>Center</Alignment>
						<Text></Text>
					</Text>
				</Children>
			</Frame>
		</Children>
	</Window>
</ISUI>