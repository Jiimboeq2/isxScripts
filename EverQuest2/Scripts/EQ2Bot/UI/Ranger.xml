<?xml version="1.0" encoding="UTF-8" ?>
<ISUI>
	<Commandcheckbox Name='AoEMode'>
		<X>10</X>
		<Y>50</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Enable AoE Mode</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[TRUE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Cast AoE Spells",TRUE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
			else
			{
				Script[EQ2Bot].Variable[AoEMode]:Set[FALSE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Cast AoE Spells",FALSE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
		</OnLeftClick>
		<Data>${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Cast AoE Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='PBAoEMode'>
		<X>10</X>
		<Y>70</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Enable PBAoE Mode</Text>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[PBAoEMode]:Set[TRUE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Cast PBAoE Spells",TRUE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
			else
			{
				Script[EQ2Bot].Variable[PBAoEMode]:Set[FALSE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Cast PBAoE Spells",FALSE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
		</OnLeftClick>
		<Data>${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Cast PBAoE Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='cbSurroundingAttacks'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>90</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Buff AA Surrounding Attacks:</Text>
		<OnLeftClick>
			if ${This.Checked}
			{

				Script[EQ2Bot].Variable[SurroundingAttacksMode]:Set[TRUE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Buff Surrounding Attacks",TRUE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
			else
			{

				Script[EQ2Bot].Variable[SurroundingAttacksMode]:Set[FALSE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Buff Surrounding Attacks",FALSE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
		</OnLeftClick>
		<Data>${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Buff Surrounding Attacks]}</Data>
	</Commandcheckbox>	
	<Commandcheckbox Name='BowAttackMode'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>110</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Bow Attacks</Text>
		<AutoTooltip>Uses Bow Attacks</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[BowAttacksMode]:Set[TRUE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Cast Bow Attack Spells",TRUE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
			else
			{
				Script[EQ2Bot].Variable[BowAttacksMode]:Set[FALSE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Cast Bow Attack Spells",FALSE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
		</OnLeftClick>
		<Data>${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Cast Bow Attack Spells]}</Data>
	</Commandcheckbox>
	<Commandcheckbox Name='RangedAttackMode'>
		<Visible>1</Visible>
		<X>10</X>
		<Y>130</Y>
		<Width>30%</Width>
		<Height>20</Height>
		<Text>Use Ranged Attacks Only</Text>
		<AutoTooltip>Use only ranged spells, arts and auto attack</AutoTooltip>
		<OnLeftClick>
			if ${This.Checked}
			{
				Script[EQ2Bot].Variable[RangedAttackMode]:Set[TRUE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Use Ranged Attacks Only",TRUE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
			else
			{
				Script[EQ2Bot].Variable[RangedAttackMode]:Set[FALSE]
				LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting["Use Ranged Attacks Only",FALSE]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
			}
		</OnLeftClick>
		<Data>${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Use Ranged Attacks Only]}</Data>
	</Commandcheckbox>
	<Text Name='lblMainWeapon'>
		<X>10</X>
		<Y>150</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Main Hand:</Text>
		<AutoTooltip>Main Hand weapon to equip when not using an AA weapon</AutoTooltip>
	</Text>
	<combobox name='cbMainWeapon'>
		<x>100</x>
		<y>150</y>
		<width>60%</width>
		<height>20</height>
		<OnLeftClick>
			variable index:item Items
			variable iterator ItemIterator
			variable int Counter = 1
			This:ClearItems
			Me:QueryInventory[Items, Location =- "Inventory" &amp;&amp; Type =- "Weapon"]
			Items:GetIterator[ItemIterator]
			if ${ItemIterator:First(exists)}
			{
				do
				{
					This:AddItem[${ItemIterator.Value.Name}]
				}
				while ${ItemIterator:Next(exists)}
			}
			do
			{
				if ${Me.Equipment[${Counter}].Type.Equal[Weapon]}
				{
					This:AddItem[${Me.Equipment[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem["${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Main]}"]
			This.ItemByText[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Main]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[WeaponMain]:Set[${This.SelectedItem.Text}]
			LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting[Main,"${This.SelectedItem.Text}"]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
		</OnSelect>
	</combobox>
	<Text Name='lblOffHand'>
		<X>10</X>
		<Y>170</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>Off Hand:</Text>
		<AutoTooltip>Off hand item to equip when not using an AA off hand item</AutoTooltip>
	</Text>
	<combobox name='cbOffHand'>
		<x>100</x>
		<y>170</y>
		<width>60%</width>
		<height>20</height>
		<AutoTooltip>Off hand item to equip when not using an AA off hand item</AutoTooltip>
		<OnLeftClick>
			variable index:item Items
			variable iterator ItemIterator
			variable int Counter = 1
			This:ClearItems
			Me:QueryInventory[Items, Location =- "Inventory" &amp;&amp; (Type =- "Weapon" || Type =- "Shield")]
			Items:GetIterator[ItemIterator]
			if ${ItemIterator:First(exists)}
			{
				do
				{
					This:AddItem[${ItemIterator.Value.Name}]
				}
				while ${ItemIterator:Next(exists)}
			}
			do
			{
				if ${Me.Equipment[${Counter}].Type.Equal[Weapon]} || ${Me.Equipment[${Counter}].Type.Equal[Shield]}
				{
					This:AddItem[${Me.Equipment[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem["${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[OffHand]}"]
			This.ItemByText[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[OffHand]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[OffHand]:Set[${This.SelectedItem.Text}]
			LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting[OffHand,"${This.SelectedItem.Text}"]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
		</OnSelect>
	</combobox>
	<Text Name='lblDagger'>
		<X>10</X>
		<Y>190</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>AA Dagger:</Text>
		<AutoTooltip>Weapon to use during Dagger required AA skills</AutoTooltip>
	</Text>
	<combobox name='cbDagger'>
		<x>100</x>
		<y>190</y>
		<width>60%</width>
		<height>20</height>
		<OnLeftClick>
			variable index:item Items
			variable iterator ItemIterator
			variable int Counter = 1
			This:ClearItems
			Me:QueryInventory[Items, Location =- "Inventory" &amp;&amp; SubType =- "Dagger"]
			Items:GetIterator[ItemIterator]
			if ${ItemIterator:First(exists)}
			{
				do
				{
					This:AddItem[${ItemIterator.Value.Name}]
				}
				while ${ItemIterator:Next(exists)}
			}
			do
			{
				if ${Me.Equipment[${Counter}].SubType.Equal[Dagger]}
				{
					This:AddItem[${Me.Equipment[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem["${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Dagger]}"]
			This.ItemByText[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Dagger]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[WeaponDagger]:Set[${This.SelectedItem.Text}]
			LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting[Dagger,"${This.SelectedItem.Text}"]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
		</OnSelect>
	</combobox>
	<Text Name='lblSword'>
		<X>10</X>
		<Y>210</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>AA Sword:</Text>
		<AutoTooltip>Weapon to use during Sword required AA skills</AutoTooltip>
	</Text>
	<combobox name='cbSword'>
		<x>100</x>
		<y>210</y>
		<width>60%</width>
		<height>20</height>
		<OnLeftClick>
			variable index:item Items
			variable iterator ItemIterator
			variable int Counter = 1
			This:ClearItems
			Me:QueryInventory[Items, Location =- "Inventory" &amp;&amp; SubType =- "Sword"]
			Items:GetIterator[ItemIterator]
			if ${ItemIterator:First(exists)}
			{
				do
				{
					This:AddItem[${ItemIterator.Value.Name}]
				}
				while ${ItemIterator:Next(exists)}
			}
			do
			{
				if ${Me.Equipment[${Counter}].SubType.Equal[Sword]}
				{
					This:AddItem[${Me.Equipment[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem["${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Sword]}"]
			This.ItemByText[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Sword]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[WeaponSword]:Set[${This.SelectedItem.Text}]
			LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting[Sword,"${This.SelectedItem.Text}"]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
		</OnSelect>
	</combobox>
	<Text Name='lblRapier'>
		<X>10</X>
		<Y>230</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>AA Rapier:</Text>
		<AutoTooltip>Weapon to use during Rapier required AA skills</AutoTooltip>
	</Text>
	<combobox name='cbRapier'>
		<x>100</x>
		<y>230</y>
		<width>60%</width>
		<height>20</height>
		<OnLeftClick>
			variable index:item Items
			variable iterator ItemIterator
			variable int Counter = 1
			This:ClearItems
			Me:QueryInventory[Items, Location =- "Inventory" &amp;&amp; SubType =- "Rapier"]
			Items:GetIterator[ItemIterator]
			if ${ItemIterator:First(exists)}
			{
				do
				{
					This:AddItem[${ItemIterator.Value.Name}]
				}
				while ${ItemIterator:Next(exists)}
			}
			do
			{
				if ${Me.Equipment[${Counter}].SubType.Equal[Rapier]}
				{
					This:AddItem[${Me.Equipment[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem["${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Rapier]}"]
			This.ItemByText[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Rapier]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[WeaponRapier]:Set[${This.SelectedItem.Text}]
			LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting[Rapier,"${This.SelectedItem.Text}"]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
		</OnSelect>
	</combobox>
	<Text Name='lblSpear'>
		<X>10</X>
		<Y>250</Y>
		<Width>20%</Width>
		<Height>20</Height>
		<Alignment>Left</Alignment>
		<Text>AA Spear:</Text>
		<AutoTooltip>Spear to use during Spear required AA skills</AutoTooltip>
	</Text>
	<combobox name='cbSpear'>
		<x>100</x>
		<y>250</y>
		<width>60%</width>
		<height>20</height>
		<AutoTooltip>Spear to use during Spear required AA skills</AutoTooltip>
		<OnLeftClick>
			variable index:item Items
			variable iterator ItemIterator
			variable int Counter = 1
			This:ClearItems
			Me:QueryInventory[Items, Location =- "Inventory" &amp;&amp; (SubType =- "Spear" || SubType =- "Great Spear")]
			Items:GetIterator[ItemIterator]
			if ${ItemIterator:First(exists)}
			{
				do
				{
					This:AddItem[${ItemIterator.Value.Name}]
				}
				while ${ItemIterator:Next(exists)}
			}
			do
			{
				if ${Me.Equipment[${Counter}].SubType.Equal[Spear]} || ${Me.Equipment[${Counter}].SubType.Equal[Great Spear]}
				{
					This:AddItem[${Me.Equipment[${Counter}].Name}]
				}
			}
			while ${Counter:Inc}&lt;=22
		</OnLeftClick>
		<OnLoad>
			This:AddItem["${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Spear]}"]
			This.ItemByText[${LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}].FindSetting[Spear]}]:Select
		</OnLoad>
		<OnSelect>
			Script[EQ2Bot].Variable[Spear]:Set[${This.SelectedItem.Text}]
			LavishSettings[EQ2Bot].FindSet[Character].FindSet[${Me.SubClass}]:AddSetting[Spear,"${This.SelectedItem.Text}"]
Script[EQ2Bot].VariableScope.EQ2Bot:Save_Settings
		</OnSelect>
	</combobox>
</ISUI>